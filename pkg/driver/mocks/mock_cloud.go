// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/aws-fsx-csi-driver/pkg/cloud (interfaces: Cloud)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cloud "sigs.k8s.io/aws-fsx-csi-driver/pkg/cloud"
)

// MockCloud is a mock of Cloud interface.
type MockCloud struct {
	ctrl     *gomock.Controller
	recorder *MockCloudMockRecorder
}

// MockCloudMockRecorder is the mock recorder for MockCloud.
type MockCloudMockRecorder struct {
	mock *MockCloud
}

// NewMockCloud creates a new mock instance.
func NewMockCloud(ctrl *gomock.Controller) *MockCloud {
	mock := &MockCloud{ctrl: ctrl}
	mock.recorder = &MockCloudMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloud) EXPECT() *MockCloudMockRecorder {
	return m.recorder
}

// CreateDataRepositoryAssociation mocks base method.
func (m *MockCloud) CreateDataRepositoryAssociation(arg0 context.Context, arg1 string, arg2 *cloud.DataRepositoryAssociationOptions) (*cloud.DataRepositoryAssociation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataRepositoryAssociation", arg0, arg1, arg2)
	ret0, _ := ret[0].(*cloud.DataRepositoryAssociation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDataRepositoryAssociation indicates an expected call of CreateDataRepositoryAssociation.
func (mr *MockCloudMockRecorder) CreateDataRepositoryAssociation(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataRepositoryAssociation", reflect.TypeOf((*MockCloud)(nil).CreateDataRepositoryAssociation), arg0, arg1, arg2)
}

// CreateFileSystem mocks base method.
func (m *MockCloud) CreateFileSystem(arg0 context.Context, arg1 string, arg2 *cloud.FileSystemOptions) (*cloud.FileSystem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFileSystem", arg0, arg1, arg2)
	ret0, _ := ret[0].(*cloud.FileSystem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFileSystem indicates an expected call of CreateFileSystem.
func (mr *MockCloudMockRecorder) CreateFileSystem(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFileSystem", reflect.TypeOf((*MockCloud)(nil).CreateFileSystem), arg0, arg1, arg2)
}

// DeleteDataRepositoryAssociation mocks base method.
func (m *MockCloud) DeleteDataRepositoryAssociation(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDataRepositoryAssociation", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDataRepositoryAssociation indicates an expected call of DeleteDataRepositoryAssociation.
func (mr *MockCloudMockRecorder) DeleteDataRepositoryAssociation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDataRepositoryAssociation", reflect.TypeOf((*MockCloud)(nil).DeleteDataRepositoryAssociation), arg0, arg1)
}

// DeleteFileSystem mocks base method.
func (m *MockCloud) DeleteFileSystem(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFileSystem", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFileSystem indicates an expected call of DeleteFileSystem.
func (mr *MockCloudMockRecorder) DeleteFileSystem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFileSystem", reflect.TypeOf((*MockCloud)(nil).DeleteFileSystem), arg0, arg1)
}

// DescribeDataRepositoryAssociationsInFileSystem mocks base method.
func (m *MockCloud) DescribeDataRepositoryAssociationsInFileSystem(arg0 context.Context, arg1 string) ([]*cloud.DataRepositoryAssociation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeDataRepositoryAssociationsInFileSystem", arg0, arg1)
	ret0, _ := ret[0].([]*cloud.DataRepositoryAssociation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDataRepositoryAssociationsInFileSystem indicates an expected call of DescribeDataRepositoryAssociationsInFileSystem.
func (mr *MockCloudMockRecorder) DescribeDataRepositoryAssociationsInFileSystem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeDataRepositoryAssociationsInFileSystem", reflect.TypeOf((*MockCloud)(nil).DescribeDataRepositoryAssociationsInFileSystem), arg0, arg1)
}

// DescribeFileSystem mocks base method.
func (m *MockCloud) DescribeFileSystem(arg0 context.Context, arg1 string) (*cloud.FileSystem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeFileSystem", arg0, arg1)
	ret0, _ := ret[0].(*cloud.FileSystem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeFileSystem indicates an expected call of DescribeFileSystem.
func (mr *MockCloudMockRecorder) DescribeFileSystem(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeFileSystem", reflect.TypeOf((*MockCloud)(nil).DescribeFileSystem), arg0, arg1)
}

// ResizeFileSystem mocks base method.
func (m *MockCloud) ResizeFileSystem(arg0 context.Context, arg1 string, arg2 int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResizeFileSystem", arg0, arg1, arg2)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResizeFileSystem indicates an expected call of ResizeFileSystem.
func (mr *MockCloudMockRecorder) ResizeFileSystem(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResizeFileSystem", reflect.TypeOf((*MockCloud)(nil).ResizeFileSystem), arg0, arg1, arg2)
}

// WaitForDataRepositoryAssociationAvailable mocks base method.
func (m *MockCloud) WaitForDataRepositoryAssociationAvailable(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitForDataRepositoryAssociationAvailable", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitForDataRepositoryAssociationAvailable indicates an expected call of WaitForDataRepositoryAssociationAvailable.
func (mr *MockCloudMockRecorder) WaitForDataRepositoryAssociationAvailable(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitForDataRepositoryAssociationAvailable", reflect.TypeOf((*MockCloud)(nil).WaitForDataRepositoryAssociationAvailable), arg0, arg1)
}

// WaitForFileSystemAvailable mocks base method.
func (m *MockCloud) WaitForFileSystemAvailable(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitForFileSystemAvailable", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitForFileSystemAvailable indicates an expected call of WaitForFileSystemAvailable.
func (mr *MockCloudMockRecorder) WaitForFileSystemAvailable(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitForFileSystemAvailable", reflect.TypeOf((*MockCloud)(nil).WaitForFileSystemAvailable), arg0, arg1)
}

// WaitForFileSystemResize mocks base method.
func (m *MockCloud) WaitForFileSystemResize(arg0 context.Context, arg1 string, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitForFileSystemResize", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitForFileSystemResize indicates an expected call of WaitForFileSystemResize.
func (mr *MockCloudMockRecorder) WaitForFileSystemResize(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitForFileSystemResize", reflect.TypeOf((*MockCloud)(nil).WaitForFileSystemResize), arg0, arg1, arg2)
}
